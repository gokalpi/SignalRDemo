"use strict";function updateStatus(n){$("#statusList").append(`<li>${n}</li>`);$("#statusLastUpdate").text(moment().format("Do MMMM YYYY, hh:mm:ss"))}function toggleAllInputs(n){$("#disconnectButton").prop("disabled",n);$("#connectButton").prop("disabled",n);$("#group").prop("disabled",n);$("#joinButton").prop("disabled",n);$("#leaveButton").prop("disabled",n);$("#toEveryone").prop("disabled",n);$("#toMyself").prop("disabled",n);$("#toRecipient").prop("disabled",n);$("#message").prop("disabled",n);$("#sendButton").prop("disabled",n)}$("#user").focus();var connection=(new signalR.HubConnectionBuilder).withUrl("/chatHub").withAutomaticReconnect().configureLogging(signalR.LogLevel.Information).build();connection.onreconnecting(n=>{console.assert(connection.state===signalR.HubConnectionState.Reconnecting),toggleAllInputs(!0),$("#recipient").empty(),updateStatus(`Connection lost due to error "${n}". Reconnecting.`)});connection.onreconnected(n=>{console.assert(connection.state===signalR.HubConnectionState.Connected),$("#group").val()&&$("#joinButton").click(),toggleAllInputs(!1),updateStatus(`Connection reestablished. Connected with connectionId "${n}".`)});connection.onclose(n=>{console.assert(connection.state===signalR.HubConnectionState.Disconnected),toggleAllInputs(!0),updateStatus(`Connection closed due to error "${n}". Try connecting.`)});connection.on("ReceiveMessage",function(n,t){var i=t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;"),r=n+" says "+i;$("#messagesList").append(`<li>${r}</li>`);$("#messagesLastUpdate").text(moment().format("Do MMMM YYYY, hh:mm:ss"))});connection.on("UserConnected",function(n,t){$("#recipient").append(`<option value="${t}">${n}</option>`);updateStatus(`User "${n}" connected`)});connection.on("UserDisconnected",function(n,t){$("#recipient option[value='"+t+"']").remove();updateStatus(`User "${n}" disconnected`)});connection.on("JoinedGroup",function(n,t){updateStatus(`User "${n}" joined to group ${t}`)});connection.on("LeftGroup",function(n,t){updateStatus(`User "${n}" left group ${t}`)});$("#user").keyup(function(){$("#connectButton").prop("disabled",!$(this).val());$("#group").focus()});$("#connectButton").click(function(){var n=$("#user");n.val()?(connection.start().then(function(){$("#disconnectButton").show();$("#connectButton").hide();toggleAllInputs(!1)}).catch(n=>console.error(n.toString())),event.preventDefault()):(alert("You have to enter a user to connect"),n.focus())});$("#disconnectButton").click(function(){$("#group").val()&&$("#leaveButton").click();connection.stop().then(function(){$("#connectButton").show();$("#disconnectButton").hide();toggleAllInputs(!0)}).catch(n=>console.error(n.toString()));event.preventDefault()});$("#joinButton").click(function(){var n=$("#group");n.val()?(connection.invoke("JoinGroup",n.val()).catch(n=>console.error(n.toString())),$("#toGroup").prop("disabled",!1),$("#leaveButton").show(),$("#joinButton").hide(),event.preventDefault()):(alert("You have to enter a group name to join"),n.focus())});$("#leaveButton").click(function(n){var t=$("#group");t.val()?(connection.invoke("LeaveGroup",t.val()).catch(n=>console.error(n.toString())),$("#toGroup").prop("disabled",!0),$("#joinButton").show(),$("#leaveButton").hide(),t.text(""),n.preventDefault()):(alert("You have to enter a group name to leave"),t.focus())});$("#toRecipient").click(function(){$("#recipient").prop("disabled",!1)});$("#sendButton").click(function(n){var i=$("#user").val(),e=$("#recipient option:selected").text(),r=$("#message").val(),u=$("#group").val(),t=$("input[name='sendTo']:checked").val(),f;t==="All"||t==="Myself"?(f=t==="All"?"SendMessageToAll":"SendMessageToCaller",connection.invoke(f,i,r).catch(n=>console.error(n.toString()))):t==="Group"?u?connection.invoke("SendMessageToGroup",i,u,r).catch(n=>console.error(n.toString())):(alert("You have to join a group first."),u.focus()):connection.invoke("SendMessageToUser",i,e,r).catch(n=>console.error(n.toString()));n.preventDefault()});